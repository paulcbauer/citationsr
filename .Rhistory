map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
i
tibble.files <- drop_na(tibble.files)
library(tidyr)
tibble.files <- drop_na(tibble.files)
View(documents
)
documents <- NULL
n <- 1
start_time <- Sys.time()
for(i in tibble.files$xml.files){
n <- n+1
print(n)
path <- paste("C:/JSTOR-data/", i, sep="")
doc <- read_xml(path)
# xml_structure(doc, indent = 8)
# Journal title
journal_title <- xml_text(xml_find_all(doc, ".//journal-title"))
if(length(journal_title) != 0){names(journal_title) <- "journal_title"}
# Publisher
publisher <- xml_text(xml_find_all(doc, ".//publisher-name"))
if(length(publisher) != 0){names(publisher) <- "publisher"}
# Article title
title <- xml_text(xml_find_all(doc, ".//article-title"))
if(length(title) != 0){names(title) <- "title"}
# Authors
authors <- doc %>%
xml_find_all("//article-meta/contrib-group/contrib/string-name/given-names/..") %>%
map_chr(. %>% xml_find_all("given-names|surname") %>% xml_text() %>% paste(collapse = " - "))
authors <- paste(authors, collapse = ", ")
if(length(authors) != 0){names(authors) <- "authors"}
# Pub-date
day <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
View(documents)
?`readHTMLTable,XMLInternalElementNode-method`
?readtext
??readtext
library(tibble)
library(dplyr)
library(tidyr)
start_time <- Sys.time()
xml.files <- list.files("C:/JSTOR-data-SUBSET", pattern="\\.xml")
txt.files <- list.files("C:/JSTOR-data-SUBSET", pattern="\\.txt")
end_time <- Sys.time()
end_time - start_time
tibble.xml.files <- tibble(xml.files = xml.files, id = gsub("\\.xml", "", xml.files))
tibble.txt.files <- tibble(txt.files = txt.files, id = gsub("\\.txt", "", txt.files))
tibble.files <- left_join(tibble.txt.files, tibble.xml.files, by = "id")
tibble.files <- drop_na(tibble.files)
nrow(tibble.files)
library(XML)
library(xml2)
library(purr)
start_time <- Sys.time()
documents <- NULL
n <- 1
for(i in tibble.files$xml.files){
n <- n+1
print(n)
path <- paste("C:/JSTOR-data-SUBSET/", i, sep="")
doc <- read_xml(path)
# xml_structure(doc, indent = 8)
# Journal title
journal_title <- xml_text(xml_find_all(doc, ".//journal-title"))
if(length(journal_title) != 0){names(journal_title) <- "journal_title"}
# Publisher
publisher <- xml_text(xml_find_all(doc, ".//publisher-name"))
if(length(publisher) != 0){names(publisher) <- "publisher"}
# Article title
title <- xml_text(xml_find_all(doc, ".//article-title"))
if(length(title) != 0){names(title) <- "title"}
# Authors
authors <- doc %>%
xml_find_all("//article-meta/contrib-group/contrib/string-name/given-names/..") %>%
map_chr(. %>% xml_find_all("given-names|surname") %>% xml_text() %>% paste(collapse = " - "))
authors <- paste(authors, collapse = ", ")
if(length(authors) != 0){names(authors) <- "authors"}
# Pub-date
day <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
library(tibble)
library(dplyr)
library(tidyr)
start_time <- Sys.time()
xml.files <- list.files("C:/JSTOR-data-SUBSET", pattern="\\.xml")
txt.files <- list.files("C:/JSTOR-data-SUBSET", pattern="\\.txt")
end_time <- Sys.time()
end_time - start_time
tibble.xml.files <- tibble(xml.files = xml.files, id = gsub("\\.xml", "", xml.files))
tibble.txt.files <- tibble(txt.files = txt.files, id = gsub("\\.txt", "", txt.files))
tibble.files <- left_join(tibble.txt.files, tibble.xml.files, by = "id")
tibble.files <- drop_na(tibble.files)
nrow(tibble.files)
library(XML)
library(xml2)
library(purr)
start_time <- Sys.time()
documents <- NULL
n <- 1
for(i in tibble.files$xml.files){
n <- n+1
print(n)
path <- paste("C:/JSTOR-data-SUBSET/", i, sep="")
doc <- read_xml(path)
# xml_structure(doc, indent = 8)
# Journal title
journal_title <- xml_text(xml_find_all(doc, ".//journal-title"))
if(length(journal_title) != 0){names(journal_title) <- "journal_title"}
# Publisher
publisher <- xml_text(xml_find_all(doc, ".//publisher-name"))
if(length(publisher) != 0){names(publisher) <- "publisher"}
# Article title
title <- xml_text(xml_find_all(doc, ".//article-title"))
if(length(title) != 0){names(title) <- "title"}
# Authors
authors <- doc %>%
xml_find_all("//article-meta/contrib-group/contrib/string-name/given-names/..") %>%
map_chr(. %>% xml_find_all("given-names|surname") %>% xml_text() %>% paste(collapse = " - "))
authors <- paste(authors, collapse = ", ")
if(length(authors) != 0){names(authors) <- "authors"}
# Pub-date
day <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
end_time <- Sys.time()
end_time - start_time
docs <- readtext::readtext("C:/JSTOR-data-SUBSET/*.txt")
install.packages("readtext")
install.packages("readtext")
docs <- readtext::readtext("C:/JSTOR-data-SUBSET/*.txt")
start_time <- Sys.time()
docs <- readtext::readtext("C:/JSTOR-data-SUBSET/*.txt")
end_time <- Sys.time()
end_time - start_time
docs
View(docs)
start_time <- Sys.time()
docs <- readtext::readtext("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
docs
start_time <- Sys.time()
docs <- readxml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
docs <- readxml::readxml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
docs <- read_xml::readxml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
docs <- read_xml::read_xml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
??read_xml
start_time <- Sys.time()
docs <- rvest::read_xml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
docs <- xml2::read_xml("C:/JSTOR-data-SUBSET/*.xml")
end_time <- Sys.time()
end_time - start_time
length(tibble.files$xml.files)
?list
pts <- list(x = 1:length(tibble.files$xml.files))
pts
list <- vector("list", length(tibble.files$xml.files))
start_time <- Sys.time()
list <- vector("list", length(tibble.files$xml.files))
for(i in tibble.files$xml.files){
list[[i]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
}
list <- vector("list", length(tibble.files$xml.files))
for(i in tibble.files$xml.files){
print(i)
list[[i]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
}
start_time <- Sys.time()
list <- vector("list", length(tibble.files$xml.files))
nr <- 0
for(i in tibble.files$xml.files){
nr <- nr + 1
print(nr)
list[[i]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
}
end_time <- Sys.time()
end_time - start_time
length(list)
start_time <- Sys.time()
list <- vector("list", length(tibble.files$xml.files))
nr <- 0
for(i in tibble.files$xml.files){
nr <- nr + 1
print(nr)
list[[i]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
}
documents <- NULL
for(i in 1:length(list)){
print(i)
doc <- list[[i]]
# xml_structure(doc, indent = 8)
# Journal title
journal_title <- xml_text(xml_find_all(doc, ".//journal-title"))
if(length(journal_title) != 0){names(journal_title) <- "journal_title"}
# Publisher
publisher <- xml_text(xml_find_all(doc, ".//publisher-name"))
if(length(publisher) != 0){names(publisher) <- "publisher"}
# Article title
title <- xml_text(xml_find_all(doc, ".//article-title"))
if(length(title) != 0){names(title) <- "title"}
# Authors
authors <- doc %>%
xml_find_all("//article-meta/contrib-group/contrib/string-name/given-names/..") %>%
map_chr(. %>% xml_find_all("given-names|surname") %>% xml_text() %>% paste(collapse = " - "))
authors <- paste(authors, collapse = ", ")
if(length(authors) != 0){names(authors) <- "authors"}
# Pub-date
day <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
end_time <- Sys.time()
end_time - start_time
list[[1]]
list
i <- tibble.files$xml.files[1]
i
z <- 1
i
list <- vector("list", length(tibble.files$xml.files))
list
z
xml.list[[z]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
xml.list <- vector("list", length(tibble.files$xml.files))
xml.list[[z]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
xml.list[[1]]
start_time <- Sys.time()
xml.list <- vector("list", length(tibble.files$xml.files))
z <- 1
for(i in tibble.files$xml.files){
xml.list[[z]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
print(z)
z <- z + 1
}
start_time <- Sys.time()
xml.list <- vector("list", length(tibble.files$xml.files))
z <- 1
for(i in tibble.files$xml.files){
xml.list[[z]] <- read_xml(paste("C:/JSTOR-data-SUBSET/", i, sep=""))
print(z)
z <- z + 1
}
documents <- NULL
for(i in 1:length(list)){
print(i)
doc <- xml.list[[i]]
# xml_structure(doc, indent = 8)
# Journal title
journal_title <- xml_text(xml_find_all(doc, ".//journal-title"))
if(length(journal_title) != 0){names(journal_title) <- "journal_title"}
# Publisher
publisher <- xml_text(xml_find_all(doc, ".//publisher-name"))
if(length(publisher) != 0){names(publisher) <- "publisher"}
# Article title
title <- xml_text(xml_find_all(doc, ".//article-title"))
if(length(title) != 0){names(title) <- "title"}
# Authors
authors <- doc %>%
xml_find_all("//article-meta/contrib-group/contrib/string-name/given-names/..") %>%
map_chr(. %>% xml_find_all("given-names|surname") %>% xml_text() %>% paste(collapse = " - "))
authors <- paste(authors, collapse = ", ")
if(length(authors) != 0){names(authors) <- "authors"}
# Pub-date
day <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("day") %>% xml_text())
month <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("month") %>% xml_text())
year <- doc  %>% xml_find_all("//article-meta/pub-date/day/..") %>%
map_chr(. %>% xml_find_first("year") %>% xml_text())
pubdate <- paste(month, "/", day, "/", year, sep = "")
# pubdate <- as.Date(pubdate, "%d/%m/%Y")
if(length(pubdate) != 0){names(pubdate) <- "pubdate"}
# Volume
volume <- xml_text(xml_find_all(doc, "//article-meta/volume"))
if(length(volume) != 0){names(volume) <- "volume"}
# issue
issue <- xml_text(xml_find_all(doc, "//article-meta/issue"))
if(length(issue) != 0){names(issue) <- "issue"}
# fpage
fpage <- xml_text(xml_find_all(doc, "//article-meta/fpage"))
if(length(fpage) != 0){names(fpage) <- "fpage"}
# lpage
lpage <- xml_text(xml_find_all(doc, "//article-meta/lpage"))
if(length(lpage) != 0){names(lpage) <- "lpage"}
temp <- cbind(journal_title, publisher, title, authors, pubdate, volume, issue, fpage, lpage)
temp <- temp[!is.na(row.names(temp)),]
# doc <- data.frame(temp)
documents <- bind_rows(documents, temp)
}
end_time <- Sys.time()
end_time - start_time
View(documents)
text.data <- readtext("C:/JSTOR-data-SUBSET/*")
text.data <- readtext::readtext("C:/JSTOR-data-SUBSET/*")
text.data <- readtext::readtext("C:/JSTOR-data-SUBSET/*.txt")
View(text.data)
text.data$text[1]
text.data$text[1]
text.data$text[2]
text.data$text[6]
text.data$text[400]
text.data$text[5000]
text.data$text[9000]
text.data$text[12000]
text.data$text[18000]
text.data$text[112000]
text.data$text[6000]
object.size(text.data)
object.size(text.data)/1000
object.size(text.data)/1000000
?object_size(text.data)
object_size(text.data)
library(pryr)
object_size(text.data)
install.packages("pryr")
object_size(text.data)
library(pryr)
object_size(text.data)
library(citationsr)
require(stringr)
require(readr)
# Generate search terms depending on number of authors and year ####
authorname <- unlist(stringr::str_split(authorname, ","))
authorname <- gsub(" ", "", authorname)
length.authorname <- length(authorname)
# Single author  ####
if(length.authorname==1){
searchterms <- paste(authorname[1], "(|\\'s|\\’s|\\’|\\')(|,)\\s{0,2}(|\\[|\\()" ,studyyear, "", sep="")
}
# Two authors  ####
if(length.authorname==2){
searchterms <- paste(authorname[1], " (\\&|and) ", authorname[2], "(|\\'s|\\’s|\\’|\\')(|,)\\s{0,2}(|\\[|\\()" ,studyyear, "(\\s{0,2}(:|,)(?# Komma oder Doppelpunkt)\\s{0,2}(PAGE|)(?# Page kommt vor oder nicht)(\\s{0,2}|)(?# nochmal space oder nicht)\\d*(?# zahl mit länge 0 oder mehr)(\\]|\\)|)(?# schliesst mit versch klammer oder nicht)|)(?# seitenzahlen ja,nein, falls nein einfach klammer matchen)(\\]|\\)|)", sep="")
# paste(authorname[1], " and ", authorname[2], sep=""), # Without year!
}
# Three authors  ####
if(length.authorname==3){
searchterms <- c(paste(authorname[1], ", ", authorname[2], ", & ", authorname[3], " ", studyyear, sep=""),
paste(authorname[1], ", ", authorname[2], ", & ", authorname[3], ", ", studyyear, sep=""),
paste(authorname[1], ", ", authorname[2], ", and ", authorname[3], ", ", studyyear, sep=""),
paste(authorname[1], ", ", authorname[2], ", and ", authorname[3], " ", studyyear, sep=""),
paste(authorname[1], ", ", authorname[2], ", and ", authorname[3], " ", "\\(" ,studyyear, "\\)", sep=""),
paste(authorname[1], " AND OTHERS, ",studyyear, sep=""),
paste(authorname[1], " AND OTHERS ",studyyear, sep=""),
paste(authorname[1], " AND OTHERS (" ,studyyear, ")", sep=""),
paste(authorname[1], " AND OTHERS, (" ,studyyear, ")", sep="")
)
}
# More than three authors  ####
if(length.authorname>3){
searchterms <- c(
paste(authorname[1], " AND OTHERS", "(|,)\\s{0,2}(|\\[|\\()" ,studyyear, "(\\s{0,2}(:|,)(?# Komma oder Doppelpunkt)\\s{0,2}(PAGE|)(?# Page kommt vor oder nicht)(\\s{0,2}|)(?# nochmal space oder nicht)\\d*(?# zahl mit länge 0 oder mehr)(\\]|\\)|)(?# schliesst mit versch klammer oder nicht)|)(?# seitenzahlen ja,nein, falls nein einfach klammer matchen)(\\]|\\)|)", sep="")
)
}
# List file names in folder (ONLY .TXT FILES) ####
if(is.null(myfiles)){myfiles <- dir(folder, pattern = ".txt", full.names = TRUE)}else{myfiles <- myfiles}
as.numeric(str_extract(citation.data$document, '\\_[0-9]{4}\\_'))
library(citationsr)
myfiles
library(citationsr)
library(citationsr)
library(citationsr)
library(citationsr)
library(citationsr)
library(citationsr)
10*1.5
11*1.5
install.packages("roygen2")
install.packages("roxygen2")
install.packages("fulltext")
library(citationsr)
library(citationsr)
0/78
0/79
267.1 - 15 - 104.1
65/120-0/78
148/0.5416667
library(citationsr)
library(citationsr)
library(citationsr)
library(citationsr)
