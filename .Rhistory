length(detected)>0
for(z in 1:length(detected)){
x <- stringr::str_replace(x, detected[z], stringr::str_replace(detected[z], "\\.", "\\.FOOTNOTE"))
}
stringr::str_replace(detected[z], "\\.", "\\.FOOTNOTE")
z <- 1
detected[z]
stringr::str_replace(x, detected[z], stringr::str_replace(detected[z], "\\.", "\\.FOOTNOTE"))
stringr::str_replace(detected[z], "\\.", "\\.FOOTNOTE")
detected[z]
x
?str_replace
z <- 1
detected[z]
stringr::str_replace(detected[z], "\\.", "\\.FOOTNOTE")
x
stringr::str_replace(x, detected[z], stringr::str_replace_all(detected[z], "\\.", "\\.FOOTNOTE"))
stringr::str_replace_all(x, detected[z], stringr::str_replace_all(detected[z], "\\.", "\\.FOOTNOTE"))
detected[z]
stringr::str_replace_all(detected[z], "\\.", "\\.FOOTNOTE")
detected <- unlist(stringr::str_extract_all(x, paste("[a-z)0-9\\]]\\.", paste("(", paste(seq(1,40), collapse="|"), ")", sep=""),"\\s[A-Z]", sep="")))
detected
stringr::str_replace_all(detected, ")", "\\)")
detected
stringr::str_replace_all(detected, "\\)", "\\\\)")
detected <- unlist(stringr::str_extract_all(x, paste("[a-z)0-9\\]]\\.", paste("(", paste(seq(1,40), collapse="|"), ")", sep=""),"\\s[A-Z]", sep="")))
detected <- stringr::str_replace_all(detected, "\\)", "\\\\)")
if(length(detected)>0){
for(z in 1:length(detected)){
x <- stringr::str_replace_all(x, detected[z], stringr::str_replace_all(detected[z], "\\.", "\\.FOOTNOTE"))
}
}
clean_text <- function(folder, number=NULL){
# List file names in folder (ONLY .TXT FILES)
file.names <- dir(paste("./", folder, sep = ""), pattern = ".txt")
# Generate file paths
file.paths <- paste(paste("./", folder, "/", sep = ""), file.names, sep="")
# Count number of files in folder
n.docs <- length(file.paths)
# Specify number of documents to assess by setting n.docs
if(!is.null(number)){n.docs <- number}
# Loop over .txt files one by one (until document nr. "number" = n.docs)
for (i in 1:n.docs){
con <- file(file.paths[i], encoding = "UTF-8") #
x <- readLines(con)
close(con)
x <- paste(x, collapse = " ")
# Replace dots that appear in various formats
# Replace dots in abbreviations
x <- stringr::str_replace_all(x, "et al\\.", "AND OTHERS")
x <- stringr::str_replace_all(x, "e\\.g\\.", "FOR EXAMPLE")
x <- stringr::str_replace_all(x, "No\\.", "NUMBER")
x <- stringr::str_replace_all(x, "NO\\.", "NUMBER")
x <- stringr::str_replace_all(x, "fig\\.", "FIGURE")
x <- stringr::str_replace_all(x, "obs\\.", "OBSERVATIONS")
x <- stringr::str_replace_all(x, "var\\. ", "VARIANCE")
x <- stringr::str_replace_all(x, "i\\.e\\.", "THAT IS")
x <- stringr::str_replace_all(x, "vs\\.", "VERSUS")
x <- stringr::str_replace_all(x, " p\\.", "PAGE")
x <- stringr::str_replace_all(x, "pp\\.", "PAGE")
x <- stringr::str_replace_all(x, " pp\\.", "PAGE")
x <- stringr::str_replace_all(x, "\\(pp\\.", "PAGE")
x <- stringr::str_replace_all(x, "apps\\.", "APPENDIX")
x <- stringr::str_replace_all(x, "app\\.", "APPENDIX")
x <- stringr::str_replace_all(x, "\\. \\. \\.", "\\[;;;\\]")
x <- stringr::str_replace_all(x, "n\\.d\\.", "NO DATE")
x <- stringr::str_replace_all(x, "f\\.n\\.", "FOOTNOTE")
x <- stringr::str_replace_all(x, "VOL\\.", "VOLUME")
x <- stringr::str_replace_all(x, "vol\\.", "VOLUME")
x <- stringr::str_replace_all(x, "esp\\.", "ESPECIALLY")
x <- stringr::str_replace_all(x, "Jr\\.", "JUNIOR")
x <- stringr::str_replace_all(x, "U\\.S\\.", "UNITED STATES")
x <- stringr::str_replace_all(x, "U\\.S\\.", "UNITED STATES")
# Replace footnotes
detected <- unlist(stringr::str_extract_all(x, paste("[a-z)0-9\\]]\\.", paste("(", paste(seq(1,40), collapse="|"), ")", sep=""),"\\s[A-Z]", sep="")))
detected <- stringr::str_replace_all(detected, "\\)", "\\\\)")
if(length(detected)>0){
for(z in 1:length(detected)){
x <- stringr::str_replace_all(x, detected[z], stringr::str_replace_all(detected[z], "\\.", "\\.FOOTNOTE"))
}
}
# REPLACE DOTS IN DECIMAL NUMBER WITH ","
detected <- unlist(stringr::str_extract_all(x, "[0-9]{1,10}\\.[0-9]{1,10}"))
if(length(detected)>0){
for(z in 1:length(detected)){
x <- stringr::str_replace(x, detected[z], stringr::str_replace_all(detected[z], "\\.", ","))
}
}
# User better regex to identify numbers (see anki)
# Replaces dots in names in text
x <- stringr::str_replace_all(x, "G. Bingham Powell and Guy Whitten", "Bingham Powell and Whitten")
# Get rid of em-dashes - QUESTION WHICH COMPUTER YOU USE
# x <- iconv(x, "", "ASCII", "byte")
# x <- stringr::str_replace_all(x, "<c2><ad><e2><80><93>", "-")
# x <- iconv(x, "", "UTF-8")
# Save cleaned text in text files
fileConn<-file(file.paths[i])
writeLines(x, fileConn, useBytes = TRUE)
close(fileConn)
# Counter
if(stringr::str_detect(as.character(i), "[0-9]*0")){cat(i, ".. ", sep="")}
}
# Message to user
cat("\n\n", n.docs, " texts/documents have been cleaned in folder '", folder ,"' and are now reeeeaaadddyyy to be analyzed!\n\n", sep = "")
}
clean_text(folder = folder, number = 20)
extract_citation_cases(folder = "Beck 1995",
authorname = "Beck, Katz",
studyyear = "1995",
number = 20) # , scop
publicationdata
names(publicationdata)
publicationdata[i,4]
publicationdata[i,3]
publicationdata[i,1]
View(publicationdata)
publicationdata <- read.table("publicationdata.txt", sep=";",
header = T, stringsAsFactors = F)
publicationdata[i,1]
publicationdata[i,3]
publicationdata[i,4]
i
i <- 1
library(citations)
getwd()
setwd("C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data")
publicationdata <- read.table("publicationdata.txt", sep=";",
header = T, stringsAsFactors = F)
folder <- "Beck 1995"
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
file.names <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.names
?file.rename
file.names
View(metadatta)
View(metadata)
file.names
names(metadata)
file.names
folder <- "Acemoglu 2001"
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
View(metadata)
metadata$data1
metadata$date1
substr(metadata$date1, 1,4)
metadata$title
substr(metadata$title, 1,20)
substr(metadata$title, 1,30)
substr(metadata$title, 1,50)
metadata$title
substr(metadata$title, 1,50)
substr(metadata$title, 1,80)
stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
substr(metadata$date1, 1,4)
authors.match[[1]]$family
metadata$author[[1]]$family[1]
metadata$author[[1]]$family
metadata$author$family
metadata$author
metadata$author$family
nrow(metadata)
metadata$author
metadata$author$family
i <- 1
metadata$author[[i]]$family
metadata$author[[2]]$family
metadata$author[[3]]$family
for(i in 1:nrow(metadata)){
authors[[i]] <- metadata$author[[i]]$family
}
authors <- NULL
for(i in 1:nrow(metadata)){
authors[[i]] <- metadata$author[[i]]$family
}
authors
i <- 1
metadata$author[[i]]$family
authors[[i]]
i <- 2
authors[[i]] <- metadata$author[[i]]$family
authors[[i]]
i <- 3
authors[[i]] <- metadata$author[[i]]$family
authors[[i]] <- paste(metadata$author[[i]]$family, sep=" ")
paste(metadata$author[[i]]$family, sep=" ")
author.names <- paste(metadata$author[[i]]$family, sep=" ")
author.names
class(author.names)
authors[[i]] <- author.names
authors[i] <- author.names
authors[i]$names <- author.names
authors[[i]]$names <- author.names
i <- 1
author.names <- paste(metadata$author[[i]]$family, sep=" ")
authors[[i]] <- author.names
i <- 2
author.names <- paste(metadata$author[[i]]$family, sep=" ")
authors[[i]] <- author.names
authors
authors <- NULL
i <- 1
author.names <- paste(metadata$author[[i]]$family, sep=" ")
authors[[i]] <- author.names
i <- 2
author.names <- paste(metadata$author[[i]]$family, sep=" ")
authors[[i]] <- author.names
author.names
authors
authors <- list(NULL)
for(i in 1:nrow(metadata)){
author.names <- paste(metadata$author[[i]]$family, sep=" ")
authors[[i]] <- author.names
}
authors
metadata$author[[i]]$family
for(i in 1:nrow(metadata)){
authors[[i]] <- metadata$author[[i]]$family
}
authors
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, sep="-")
}
authors
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse="-")
}
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse="-")
}
authors
authors
titles
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
titles
authors
authors <- unlist(authors)
authors
years
years <- substr(metadata$date1, 1,4)
years
paste(authors, titles, years)
paste(authors, years, titles, sep = " - ")
new.file.names <- paste(authors, years, titles, sep = " - ")
?rename.files
?files.rename
file.paths
file.paths <- paste(paste("./", folder, "/", sep = ""), file.names, sep="")
file.paths
to.names <- paste(paste("./", folder, "/", sep = ""), file.names, sep="")
from.names <- paste(paste("./", folder, "/", sep = ""), new.file.names, sep="")
from.names
to.names <- paste(paste("./", folder, "/", sep = ""), file.names, sep="")
from.names <- paste(paste("./", folder, "/", sep = ""), new.file.names, sep="")
file.rename(from.names, to.names)
getwd()
old.path <- getwd()
old.path
setwd(paste("C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data/", folder, sep=""))
file.rename(from.names, to.names)
file.rename(file.names, new.file.names)
setwd(paste("C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data/", folder, sep=""))
file.rename(file.names, new.file.names)
?file.path
setwd("C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data/")
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names))
folder
file.path(folder, file.names)
file.path(folder, new.file.names)
getwd()
file.path(folder, file.names)
file.path(folder, new.file.names)
folder
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
years <- substr(metadata$date1, 1,4)
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse="-")
}
authors <- unlist(authors)
new.file.names <- paste(authors, years, titles, sep = " - ")
new.file.neams
new.file.names
paste(authors, years, titles, sep = " - ") %>%
stringr::str_replace_all("?", "")
require(stringr)
paste(authors, years, titles, sep = " - ") %>%
stringr::str_replace_all("?", "")
paste(authors, years, titles, sep = " - ") %>%
stringr::str_replace_all("\\?", "")
paste(authors, years, titles, sep = " - ") %>%
stringr::str_replace_all("\\?\\:", "")
paste(authors, years, titles, sep = " - ") %>%
stringr::str_replace_all("\\?:", "")
paste(authors, years, titles, sep = " - ") %>%
str_replace_all("\\?:", "")
paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", "")
paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
new.file.names <- paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names))
file.path(folder, file.names)
file.path(folder, new.file.names)
new.file.names <- paste(new.file.names, ".txt", sep = "")
new.file.names
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names))
?file.rename
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names)
, showWarnings = TRUE, overwrite = T)
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names)
overwrite = T)
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names),
overwrite = T)
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names),
showWarnings
= T)
file.rename(from = file.path(folder, file.names), to = file.path(folder, new.file.names))
file.path(folder, file.names)
file.names
dir(paste("./", folder, sep = ""), pattern = ".txt")
file.path(paste("./", folder, "/", sep = ""), file.names)
file.path(paste("./", folder, sep = ""), file.names)
file.rename(from = file.path(paste("./", folder, sep = ""), file.names), to = file.path(paste("./", folder, sep = ""), new.file.names))
file.path(paste("./", folder, sep = "")
)
file.rename(from = file.path(paste("./", folder, sep = ""), file.names), to = file.path(paste("./", folder, sep = ""), new.file.names))
file.path(paste("./", folder, sep = ""), file.names)
file.path(paste("./", folder, sep = ""), new.file.names)
file.names <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.names
file.rename(from = "./Acemoglu 2001/Abad 2013 - Persistent Inequality - Trade, Factor Endowments, and Inequality in Republican Latin America.txt"
, to = "./Acemoglu 2001/Abad - 2013 - Persistent Inequality  Trade, Factor Endowments, and Inequality in Republican La.txt" )
file.names <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.names
file.rename(from = file.path(paste("./", folder, sep = ""), file.names), to = file.path(paste("./", folder, sep = ""), new.file.names))
file.names.pdf <- dir(paste("./", folder, sep = ""), pattern = ".pdf")
file.names.pdf
new.file.names.pdf <- paste(new.file.names, ".pdf", sep = "")
new.file.names.pdf
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
years <- substr(metadata$date1, 1,4)
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse="-")
}
authors <- unlist(authors)
new.file.names <- paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
new.file.names.txt <- paste(new.file.names, ".txt", sep = "")
new.file.names.pdf <- paste(new.file.names, ".pdf", sep = "")
# List file names in folder (ONLY .TXT FILES)
file.names.txt <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.txt), to = file.path(paste("./", folder, sep = ""), new.file.names.txt))
# Rename pdf files
file.names.pdf <- dir(paste("./", folder, sep = ""), pattern = ".pdf")
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.pdf), to = file.path(paste("./", folder, sep = ""), new.file.names.pdf))
file.names.pdf
new.file.names.pdf
file.names.pdf <- dir(paste("./", folder, sep = ""), pattern = ".pdf")[1:length(new.file.names.pdf)]
file.names.pdf
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.pdf), to = file.path(paste("./", folder, sep = ""), new.file.names.pdf))
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
setwd("C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data")
publicationdata <- read.table("publicationdata.txt", sep=";",
header = T, stringsAsFactors = F)
for (i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
study.title <- publicationdata[i,2]
authorname <- publicationdata[i,3]
studyyear <- publicationdata[i,4]
# function
extract_text(folder = folder,  number = 10)
}
library(citations)
for (i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
study.title <- publicationdata[i,2]
authorname <- publicationdata[i,3]
studyyear <- publicationdata[i,4]
# function
extract_text(folder = folder,  number = 10)
}
for (i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
# functions
files <- list.files(folder, pattern = "txt$", full.names = T)
foo <- plyr::adply(files[1:length(files)], .margins = 1, .fun = get_metadata_doc, .progress = "text")
save(foo, file = paste("./", folder, "_metadata.RData", sep=""))
}
folder <- publicationdata[i,1]
folder
i <- 1
folder <- publicationdata[i,1]
folder
require(stringr)
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
require(stringr)
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
years <- substr(metadata$date1, 1,4)
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse="-")
}
authors <- unlist(authors)
new.file.names <- paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
new.file.names.txt <- paste(new.file.names, ".txt", sep = "")
new.file.names.pdf <- paste(new.file.names, ".pdf", sep = "")
new.file.names.txt
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
years <- substr(metadata$date1, 1,4)
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse=",")
}
authors <- unlist(authors)
new.file.names <- paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
new.file.names.txt <- paste(new.file.names, ".txt", sep = "")
new.file.names.pdf <- paste(new.file.names, ".pdf", sep = "")
new.file.names.txt
file.names.txt <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.txt), to = file.path(paste("./", folder, sep = ""), new.file.names.txt))
# Rename pdf files
file.names.pdf <- dir(paste("./", folder, sep = ""), pattern = ".pdf")[1:length(new.file.names.pdf)]
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.pdf), to = file.path(paste("./", folder, sep = ""), new.file.names.pdf))
rename_docs <- function(folder){
# load packages
require(stringr)
# Get medadatafile for folder/study
load(paste("./", folder, "_metadata.RData", sep="")) # load RData file
metadata <- foo
# Generate new titles from metadata
titles <- stringr::str_replace(substr(metadata$title, 1,80), "^\\s", "")
years <- substr(metadata$date1, 1,4)
authors <- list(NULL)
for(i in 1:nrow(metadata)){
authors[[i]] <- paste(metadata$author[[i]]$family, collapse=",")
}
authors <- unlist(authors)
new.file.names <- paste(authors, years, titles, sep = " - ") %>%
str_replace_all("[?:]", " ")
new.file.names.txt <- paste(new.file.names, ".txt", sep = "")
new.file.names.pdf <- paste(new.file.names, ".pdf", sep = "")
# List file names in folder (ONLY .TXT FILES)
file.names.txt <- dir(paste("./", folder, sep = ""), pattern = ".txt")
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.txt), to = file.path(paste("./", folder, sep = ""), new.file.names.txt))
# Rename pdf files
file.names.pdf <- dir(paste("./", folder, sep = ""), pattern = ".pdf")[1:length(new.file.names.pdf)]
file.rename(from = file.path(paste("./", folder, sep = ""), file.names.pdf), to = file.path(paste("./", folder, sep = ""), new.file.names.pdf))
}
for(i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
rename_docs(folder = folder)
}
for(i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
study.title <- publicationdata[i,2]
# functions
identify_study_doc(study.title = study.title,
folder = folder
,  number = 10)
}
for(i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
delete_ref_section(folder = folder, number = 10) # , number = 20
delete_running_heads(folder = folder, number = 10)
clean_text(folder = folder, number = 10)
}
for(i in 1){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
authors <- publicationdata[i,3]
year <- publicationdata[i,4]
extract_citation_cases(folder = folder,
authorname = authors,
studyyear = year,
number = 10) # , scope = 2
}
for(i in 1:6){ # Loop across rows of 'publicationdata'
# specification of elements
folder <- publicationdata[i,1]
authors <- publicationdata[i,3]
year <- publicationdata[i,4]
extract_citation_cases(folder = folder,
authorname = authors,
studyyear = year,
number = 10) # , scope = 2
}
