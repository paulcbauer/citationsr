{
    "collab_server" : "",
    "contents" : "#' Extract citation cases.\n#'\n#' @return Returns and saves data (.csv and .html) containing citation cases in current working directory.\n#' @param folder Name of folder within working directory in which the citing documents (.txt files) are located, e.g. \"Beck 1995\".\n#' @param authorname Enter the names of all authors separated by comma.\n#' @param studyyear Enter the year when the study was published.\n#' @param scope Enter number of sentences before/after citation case sentence to extract.\n#' @param clean If TRUE (default) it cleanes some stuff before the citation case\n#'\n#'\n#' @examples\n#' \\dontrun{\n#'  setwd(\"C:/Users/paul/Google Drive/Research/2016_Quality_of_citations/data\")\n#'  folder <- \"Acemoglu 2001\"\n#'  study.title <- \"The colonial origins of comparative development: An empirical investigation\"\n#'  authorname <- \"Acemoglu, Johnson, Robinson\"\n#'  studyyear <- 2001\n#'  extract_citation_cases(folder, authorname, studyyear, clean = TRUE) #\n#' }\n\nextract_citation_cases <- function(folder, authorname, studyyear, scope=NULL, number=NULL, clean=NULL){\n\n    require(stringr)\n \n\n#####################################################################\n### Generate search terms depending on number of authors and year ###\n#####################################################################\n    authorname <- unlist(stringr::str_split(authorname, \",\"))\n    authorname <- gsub(\" \", \"\", authorname)\n    length.authorname <- length(authorname)\n\n    # Single author\n    if(length.authorname==1){\n      searchterms <- paste(authorname[1], \"(|\\\\'s|\\\\’s|\\\\’|\\\\')(|,)\\\\s{0,2}(|\\\\[|\\\\()\" ,studyyear, \"\", sep=\"\")\n    }\n\n    # Two authors\n    if(length.authorname==2){\n      searchterms <- paste(authorname[1], \" (\\\\&|and) \", authorname[2], \"(|\\\\'s|\\\\’s|\\\\’|\\\\')(|,)\\\\s{0,2}(|\\\\[|\\\\()\" ,studyyear, \"(\\\\s{0,2}(:|,)(?# Komma oder Doppelpunkt)\\\\s{0,2}(PAGE|)(?# Page kommt vor oder nicht)(\\\\s{0,2}|)(?# nochmal space oder nicht)\\\\d*(?# zahl mit länge 0 oder mehr)(\\\\]|\\\\)|)(?# schliesst mit versch klammer oder nicht)|)(?# seitenzahlen ja,nein, falls nein einfach klammer matchen)(\\\\]|\\\\)|)\", sep=\"\")\n      # paste(authorname[1], \" and \", authorname[2], sep=\"\"), # Without year!\n    }\n\n    # Three authors\n    if(length.authorname==3){\n      searchterms <- c(paste(authorname[1], \", \", authorname[2], \", & \", authorname[3], \" \", studyyear, sep=\"\"),\n               paste(authorname[1], \", \", authorname[2], \", & \", authorname[3], \", \", studyyear, sep=\"\"),\n               paste(authorname[1], \", \", authorname[2], \", and \", authorname[3], \", \", studyyear, sep=\"\"),\n               paste(authorname[1], \", \", authorname[2], \", and \", authorname[3], \" \", studyyear, sep=\"\"),\n               paste(authorname[1], \", \", authorname[2], \", and \", authorname[3], \" \", \"\\\\(\" ,studyyear, \"\\\\)\", sep=\"\"),\n\n               paste(authorname[1], \" AND OTHERS, \",studyyear, sep=\"\"),\n               paste(authorname[1], \" AND OTHERS \",studyyear, sep=\"\"),\n               paste(authorname[1], \" AND OTHERS (\" ,studyyear, \")\", sep=\"\"),\n               paste(authorname[1], \" AND OTHERS, (\" ,studyyear, \")\", sep=\"\")\n      )\n\n    }\n\n    # More than three authors\n    if(length.authorname>3){\n      searchterms <- c(\n        paste(authorname[1], \" AND OTHERS\", \"(|,)\\\\s{0,2}(|\\\\[|\\\\()\" ,studyyear, \"(\\\\s{0,2}(:|,)(?# Komma oder Doppelpunkt)\\\\s{0,2}(PAGE|)(?# Page kommt vor oder nicht)(\\\\s{0,2}|)(?# nochmal space oder nicht)\\\\d*(?# zahl mit länge 0 oder mehr)(\\\\]|\\\\)|)(?# schliesst mit versch klammer oder nicht)|)(?# seitenzahlen ja,nein, falls nein einfach klammer matchen)(\\\\]|\\\\)|)\", sep=\"\")\n\n      )\n\n    }\n\n#############################################\n\n\n\n\n\n# List file names in folder (ONLY .TXT FILES)\n  file.names <- dir(paste(\"./\", folder, sep = \"\"), pattern = \"processed.txt\")\n\n# Generate file paths\n  file.paths <- paste(paste(\"./\", folder, \"/\", sep = \"\"), file.names, sep=\"\")\n\n# Count number of files in folder\n  n.docs <- length(file.paths)\n\n# Specify number of documents to assess by setting n.docs\n  if(!is.null(number)){n.docs <- number}\n\n\n\n\n# Generate regex for search terms and dependency on scope\n    searchterms <- paste(\"\\\\.[^.]*\", searchterms, \"[^.]*\\\\.\", sep = \"\")\n\n    # Change the regex if scope is broader, i.e. if sentence before and after should be\n      # extracted\n    if(!is.null(scope)){\n\n      searchterms <- paste(paste(rep(\"\\\\.[^.]*\", scope), collapse=\"\"),\n                           searchterms,\n                           paste(rep(\"[^.]*\\\\.\", scope), collapse=\"\"),\n                           sep = \"\")\n    }\n\n\n\n# Loop over .txt files one by one (until document nr. \"number\" = n.docs)\n  all.docs.cit.cases <- NULL\n  for (i in 1:n.docs){\n\n    # Read in files\n    con <- file(file.paths[i], encoding = \"UTF-8\")\n    x <- readLines(con)\n    close(con)\n\n    # Extract sentences/lines that contain searchterms\n    cit.cases.doc.i <- stringr::str_extract_all(x, paste(searchterms, collapse=\"|\"))\n\n    # Write them to list\n    all.docs.cit.cases[i] <- cit.cases.doc.i\n\n    # Counter\n    if(stringr::str_detect(as.character(i), \"[0-9]*0\")){cat(i, \".. \", sep=\"\")}\n\n  }\n\n\n\n\n# Get first estimate of number of citation cases\n  total.citation.cases <- sum(sapply(all.docs.cit.cases, length))\n\n# Message to user\n  cat(\"\\n For \", authorname, \" we have identified \", total.citation.cases, \" citation cases within \", n.docs, \" documents.\", sep=\"\")\n\n# Generate dataframe with citation cases\n  citation.data <- data.frame(document = 1:total.citation.cases, citation.case = 1:total.citation.cases)\n\n# Take names from citing document file names\n  citation.data[,1] <- rep(file.names, sapply(all.docs.cit.cases[1:length(file.names)], length))\n  # does it work with filenames here?\n  citation.data[,2] <- unlist(all.docs.cit.cases)\n\n# Change document names in citation cases data frame\n  citation.data$document <- sub(\"\\\\s-$\", \"\", stringr::str_extract(citation.data$document, \"^.*-.*\\\\s-\"))\n\n# Clean citation cases\n  if(!is.null(clean)){\n  citation.data$citation.case <- stringr::str_replace_all(citation.data$citation.case, \"^\\\\.FOOTNOTE[0-9]{1,3}\\\\s\", \"^\\\\.\\\\s\")\n  citation.data$citation.case <- stringr::str_replace_all(citation.data$citation.case, \"^\\\\.\\\\s|^\\\\.\\\\?\\\\s|^\\\\.!\\\\s|^\\\\.\\\\s?[0-9]{1,3}\\\\s?\", \"\")\n  }\n\n# Save citation cases in table (csv and html)\n  write.table(citation.data, file =  paste(\"./\", authorname, \" \", studyyear, \"_citation_cases.csv\", sep = \"\"), sep=\",\")\n  print(xtable::xtable(citation.data),type='html',comment=FALSE, file=paste(\"./\", authorname, \" \", studyyear, \"_citation_cases.html\", sep = \"\"))\n\n# Message to user\n  cat(\"\\n \\nThey are printed and saved as files in the working directory: '*_citation_cases.csv' and '*_citation_cases.html'.\\n\\n\")\n\n  }\n",
    "created" : 1461836886641.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3018253200",
    "id" : "A33659FB",
    "lastKnownWriteTime" : 1461837536,
    "last_content_update" : 1461838254792,
    "path" : "C:/Users/Paul/GDrive/Packages/citations/R/extract_citation_cases.R",
    "project_path" : "R/extract_citation_cases.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}